<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>hexo搭建github分支问题</title>
      <link href="/2019/10/24/hexobranch/"/>
      <content type="html"><![CDATA[<p>之前创建了一个hexo模板，但源文件没办法备份，更换电脑后之前的文件找不到，相当于之前辛辛苦苦写的文档都丢了。</p><p>看到网上说可以创建利用分支来解决这个问题，尝试了一把也踩了不少坑，现在把关键步骤记录下来以备后患。</p><a id="more"></a><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ol><li><p>创建github仓库</p></li><li><p>新建一个<code>hexo</code>分支</p></li><li><p>设置<code>hexo</code>为默认分支，如图。</p><p> <img src="settingBranch.jpg" alt="settingBranch"></p></li><li><p>配置SSH Key</p></li></ol><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>先创建一个空文件夹，命名为<code>github.io</code>（命名随意）</li><li>进入该文件夹下，执行<code>git clone （你的仓库地址）</code></li><li>由于我们设置了默认分支，此时clone下来的是<code>hexo</code>分支的内容。本地分支默认显示为<code>master</code>，我们把本地分支切换到<code>hexo</code>分支去</li><li><code>git checkout hexo</code>  切换到hexo分支</li><li><code>git branch -v</code>  打印当前所有的分支，当前分支颜色为绿色</li></ol><p>此时分支问题就弄好了，然后开始新建hexo模板。</p><ol><li><p>在当前文件夹下执行<code>hexo init sourceHexo</code>，将hexo模板生成到一个子文件夹下。</p></li><li><p>进入<code>sourceHexo</code>目录下，执行<code>hexo g</code>生成静态文件</p></li><li><p>安装deploy插件，使hexo可以生成后提交到git上</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>打开<code>_config.yml</code>文件，修改<code>deploy</code>项为：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:Yadea-Web/Yadea-Web.github.io.git（你的仓库地址）</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p> repository为你的仓库地址，必须是git开头的，所以准备工作时要配置SSH Key。<br> 设置提交时提交到master分支上。<br> github.io默认地址打开时为master分支的index.html文件</p></li><li><p>执行<code>hexo d</code>提交生成的静态文件代码</p></li><li><p>打开你的github.io主页，地址为你的名字+github.io。比如我的仓库地址为<code>https://github.com/Yadea-Web/Yadea-Web.github.io</code>，那我的博客地址为<code>https://Yadea-Web.github.io</code>，把<code>Yadea-Web</code>那块儿替换成你自己的名字就可以了</p></li></ol><p>到此我们的git就配置好了，文章也可以生成了。</p><h4 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h4><p>配置好以上内容，之后我们新建文章修改文章，都要提交两次。一次是提交hexo为我们生成的静态文件到<code>master</code>分支，供用户访问。另一次是我们自己提交源文件到<code>hexo</code>分支，为自己备份。</p><ul><li><p>hexo提交命令</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>git提交命令</p><pre><code>git add .git commit -m &quot;备份&quot;git push origin hexo</code></pre></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><code>master</code>分支放着hexo为我们生成的静态文件，用户可以直接通过博客地址访问生成好的内容。</li><li><code>hexo</code>分支放着我们的源文件和配置信息，更换电脑或者文章找不到时可以git clone hexo分支的内容重新配置，之前的文章也不会丢失。</li></ul><p>记得每次提交一定要提交两次啊！！！</p><h4 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h4><ol><li>执行<code>git clone</code>后执行<code>hexo init</code>，提示文件夹内有内容，只能在空文件夹里新建。把.git文件夹挪出去后再执行依旧不行，百度了很多说删掉就可以，但我这里就是不行。所以用了创建一个新的文件夹的方式来解决这个问题，<code>hexo init</code> 指在当前文件夹下新建hexo库，<code>hexo init XXX</code> 指新建一个<code>XXX</code>文件夹，在<code>XXX</code>文件夹下新建hexo库，这样就解决了</li><li><code>git clone</code> 下来的默认远程分支为<code>hexo</code>（我们设置的），本地的叫<code>master</code>（默认创建的第一个分支，但代码是<code>hexo</code>分支的），有点混乱，所以切到<code>hexo</code>分支就可以了，别的不需要care</li></ol><p>你成功了吗？</p>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>从0开始创建一个github博客</title>
      <link href="/2019/10/23/FirstBlog/"/>
      <content type="html"><![CDATA[<p>开篇大吉。</p><p>今天鼓捣了一天的github.io和hexo，终于搭建好了，记录一下过程和踩的坑。</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><ul><li>创建一个github.io博客</li><li>hexo<ul><li>hexo简介</li><li>hexo环境搭建</li><li>hexo创建文章</li><li>hexo常用命令</li><li>hexo与git的关系</li></ul></li><li>其它注意事项</li></ul><a id="more"></a><p>写一篇博客就像是做一盘菜，要求色香味俱全。在这个大前提下，我们需要准备好厨房、蔬菜、厨师等。</p><p>仓库就是我们的厨房，文章内容是我们的蔬菜，我们自己是厨师，hexo就是调味料啦，准备好这些我们就可以开始炒菜了！</p><h4 id="建厨房"><a href="#建厨房" class="headerlink" title="建厨房"></a>建厨房</h4><p>炒菜第一步当然是建一个厨房了，但我们是厨师不会盖房子怎么办？很简单，把我们对厨房的要求告诉建筑工人就可以了，让他们帮我们盖个厨房。</p><p>首先打开<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a>，注册一个账号，然后登录，我们就可以在这个网站上建仓库了，大家都可以看到。</p><p>登录成功后，点击右上角的+号，开始创建一个仓库。每个人可以创建很多个不同名字的仓库，但博客地址有命名要求。</p><p><img src="newRepository.jpg" alt="newRepository"><br><img src="newButton.jpg" alt="newRepository"></p><p>点击进入创建仓库页面，输入我们要创建仓库的名字。我们想要直接用注册的用户名访问我们的博客，仓库命名有固定的格式。在Repository name输入框中输入Owner中显示的名字，后面加上<code>.github.io</code>。比如你的Owner显示为zhangsan，那这个输入框就要输入<code>zhangsan.github.io</code>。输入完成后点击下面的Create repository按钮进行创建。</p><p><img src="create.jpg" alt="create"></p><p>创建完成后会自动跳转到页面，如图所示。<br><img src="done.jpg" alt="done"></p><p>这个时候我们的博客仓库就创建完成了（厨房已盖好），但此时页面还访问不了，因为仓库是空的（没有菜和调味品）。接下来我们就去买调味品吧！</p><h4 id="搭模板"><a href="#搭模板" class="headerlink" title="搭模板"></a>搭模板</h4><h5 id="hexo能为我们做什么"><a href="#hexo能为我们做什么" class="headerlink" title="hexo能为我们做什么"></a>hexo能为我们做什么</h5><ul><li>hexo命令行创建文章，会生成一个md文件，我们只需要修改这个文件，不需要关注样式问题</li><li>hexo会将编写好的md文件自动生成漂亮的网页</li><li>hexo可以直接上传到github上</li><li>hexo自动统计标签分类等信息</li><li>hexo为我们提供了很多漂亮的模板</li></ul><h5 id="安装hexo环境"><a href="#安装hexo环境" class="headerlink" title="安装hexo环境"></a>安装hexo环境</h5><p>hexo是一个插件（免费调味品商店），我们可以从里面找到很多漂亮的模板（好吃的调味品）来丰富我们的博客网站。</p><p>使用hexo命令行创建的文章为md格式，hexo会自动为我们生成HTML文件供用户访问，我们只需要专注于内容的编写即可。</p><p>命令行执行以下命令，全局安装hexo依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><p>官网：<a href="https://hexo.io" target="_blank" rel="noopener">https://hexo.io</a></p><p>主题：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p><h5 id="使用hexo"><a href="#使用hexo" class="headerlink" title="使用hexo"></a>使用hexo</h5><p>打开官网有详细的介绍说明，简单记录一下关键步骤。</p><ol><li>创建一个空文件夹（之后所有的文章都会放在这里，放一个自己喜欢的地方）</li><li>把该文件夹拖入命令行（或打开命令行，进入该文件夹）</li><li>执行<code>hexo init</code>，hexo会自动为我们下载依赖文件到该文件夹下</li><li>执行<code>hexo s</code>，查看命令行中显示的地址（一般情况下为<code>localhost:4000</code>），在浏览器输入该地址可以看到我们已经创建了一个博客页面，使用的是hexo默认的主题</li></ol><p>这个主题我不喜欢，想换个更漂亮的怎么办？</p><p>在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>这个网站里选择你喜欢的主题，然后点击图片下方的名字（点击图片是预览，点击图片下方名字是主题的仓库）进入主题仓库，按照介绍安装主题，然后更新<code>_config.yml</code>文件。</p><p>比如我的主题是Nayo，在命令行执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Lemonreds/hexo-theme-Nayo themes/nayo</span><br></pre></td></tr></table></figure><p>然后修改<code>_config.yml</code>中的<code>theme</code>为<code>nayo</code></p><p>执行<code>hexo g</code>后再执行<code>hexo s</code>刷新页面就可以看到新主题了。</p><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><p>hexo创建文章命令为<code>hexo new xxx</code>，xxx为文章链接地址，执行后在<code>source</code>-&gt;<code>_post</code>目录下可看到创建的md文档，修改这个文件中的内容即可。</p><p>文章会自动生成部分内容，这些记录了文章的信息，配置标题、创建时间、标签、分类等信息。如果没有生成标签、分类信息，自己加上即可。注意冒号后面要有空格，如果想要多个标签就[标签1, 标签2]用数组来控制。</p><p><img src="blog_header.jpg" alt="blog"></p><h4 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h4><p>hexo创建页面命令为<code>hexo new page xxx</code>，xxx为页面链接地址，执行后在<code>source</code>目录下可看到创建的页面文件夹，修改对应文件夹下的index.md文档即可。</p><p>一般主题中没有关于我们、标签页时，需要我们创建一个对应页面。</p><h4 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h4><ul><li><code>hexo g</code>     生成静态文件</li><li><code>hexo s</code>    本地开启服务</li><li><code>hexo d</code>    传git</li></ul><h4 id="hexo与git的关系"><a href="#hexo与git的关系" class="headerlink" title="hexo与git的关系"></a>hexo与git的关系</h4><p>hexo可以配置git地址，生成HTML文件后上传部署更新。</p><p>我们将仓库分为两个分支，<code>master</code>放静态文件，<code>hexo</code>放我们的源文件。</p><p>具体操作参考<a href="../../24/hexobranch/index.html">hexo搭建github分支问题</a></p><h5 id="为什么不用git-pull-全部推到git上？"><a href="#为什么不用git-pull-全部推到git上？" class="headerlink" title="为什么不用git pull 全部推到git上？"></a>为什么不用git pull 全部推到git上？</h5><p><code>hexo g</code>会生成一个public文件夹，<code>hexo d</code>会只push这个文件夹中的内容，用户只会看到生成后的HTML文件。</p><p>用<code>git push</code>时，会把所有的文件都上传到git上，仓库默认的URL访问时会访问根目录的<code>index.html</code>文件，push代码后会导致该文件找不到。</p><p>所以我们用<code>hexo d</code>推我们的静态文件，用<code>git push</code>去把我们的源文件推到另一个分支中。</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>修改<code>_config.yml</code>后需要执行<code>hexo g</code>重新生成才会生效</li></ul><p>参考文档：<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p>]]></content>
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
